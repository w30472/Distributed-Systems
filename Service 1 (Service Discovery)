import javax.jmdns.JmDNS;
import javax.jmdns.ServiceEvent;
import javax.jmdns.ServiceListener;
import javax.jmdns.ServiceInfo;
import java.io.IOException;
import java.net.InetAddress;

public class SmartCameraServiceDiscovery {

    public static void main(String[] args) {
        try {
            // Create a JmDNS instance
            JmDNS jmdns = JmDNS.create(InetAddress.getLocalHost());

            // Add a service listener
            jmdns.addServiceListener("_smartcameraprotoservice._tcp.local.", new ServiceListener() {
                @Override
                public void serviceAdded(ServiceEvent event) {
                    // Service was added
                    System.out.println("Service added: " + event.getInfo());
                }

                @Override
                public void serviceRemoved(ServiceEvent event) {
                    // Service was removed
                    System.out.println("Service removed: " + event.getInfo());
                }

                @Override
                public void serviceResolved(ServiceEvent event) {
                    // Service was resolved (found)
                    System.out.println("Service resolved: " + event.getInfo());

                    // Get the service information
                    ServiceInfo serviceInfo = event.getInfo();
                    String host = serviceInfo.getHostAddress();
                    int port = serviceInfo.getPort();

                    // Use the service
                    // e.g. create a client to communicate with the service
                    SmartCameraClient client = new SmartCameraClient(host, port);
                    client.start();
                }
            });

            // Wait a bit
            Thread.sleep(30000);

            // Unregister all services
            jmdns.unregisterAllServices();

        } catch (IOException e) {
            System.out.println(e.getMessage());
        } catch (InterruptedException e) {
            System.out.println(e.getMessage());
        }
    }

}
